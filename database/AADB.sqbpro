<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Tadeu Maffeis/Documents/NetbeansProjects/AAService/database/AADB.sqlite" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser query pragmas" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2873"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="0" parent="0"/><expanded_item id="1" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,15:mainsqlite_sequence"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">BEGIN TRANSACTION;

DROP TABLE IF EXISTS &quot;AACourse&quot;;
DROP TABLE IF EXISTS &quot;AASubject&quot;;
DROP TABLE IF EXISTS &quot;AAStudents&quot;;
DROP TABLE IF EXISTS &quot;AAEnrolled&quot;;
DROP TABLE IF EXISTS &quot;AAAssignments&quot;;
DROP TABLE IF EXISTS &quot;AAAssignmentsFinished&quot;;
DROP TABLE IF EXISTS &quot;AALogin&quot;;


CREATE TABLE IF NOT EXISTS &quot;AACourse&quot; (
	&quot;course_id&quot;	INTEGER,
	&quot;initials&quot;	VARCHAR(10) NOT NULL,
	&quot;name&quot;		VARCHAR(70),
	PRIMARY KEY(&quot;course_id&quot;)
);
CREATE TABLE IF NOT EXISTS &quot;AASubject&quot; (
	&quot;course_id&quot;	INTEGER NOT NULL,
	&quot;subject_id&quot;	VARCHAR(10) NOT NULL,
	&quot;initials&quot;	VARCHAR(10) NOT NULL,
	&quot;name&quot;		VARCHAR(70),
	FOREIGN KEY(&quot;course_id&quot;) REFERENCES &quot;AACourse&quot;(&quot;course_id&quot;) ON DELETE RESTRICT ON UPDATE RESTRICT,
	PRIMARY KEY(&quot;course_id&quot;,&quot;subject_id&quot;)
);

CREATE TABLE IF NOT EXISTS &quot;AAStudents&quot; (
	&quot;student_ar&quot;	VARCHAR(20) NOT NULL,
	&quot;name&quot;		VARCHAR(70) NOT NULL,
	&quot;email&quot;		VARCHAR(50) UNIQUE NOT NULL,
	PRIMARY KEY(&quot;student_ar&quot;)
);

CREATE TABLE IF NOT EXISTS &quot;AAEnrolled&quot; (
	&quot;course_id&quot;	INTEGER NOT NULL,
	&quot;subject_id&quot;	VARCHAR(10) NOT NULL,
	&quot;student_ar&quot;	VARCHAR(20) NOT NULL,
	FOREIGN KEY(&quot;course_id&quot;,&quot;subject_id&quot;) REFERENCES &quot;AASubject&quot;(&quot;course_id&quot;,&quot;subject_id&quot;) ON DELETE RESTRICT ON UPDATE RESTRICT,
	FOREIGN KEY (&quot;student_ar&quot;) REFERENCES &quot;aastudents&quot; (&quot;student_ar&quot;),
	PRIMARY KEY(&quot;course_id&quot;,&quot;subject_id&quot;,&quot;student_ar&quot;)
);

CREATE TABLE IF NOT EXISTS &quot;AAAssignments&quot; (
	&quot;course_id&quot;		INTEGER 	NOT NULL,
	&quot;subject_id&quot;		VARCHAR(10) 	NOT NULL,
	&quot;assignment_id&quot;		VARCHAR(10) 	NOT NULL,
	&quot;content&quot;		LONGBLOB 	NOT NULL,
	FOREIGN KEY(&quot;course_id&quot;, &quot;subject_id&quot;) REFERENCES &quot;AASubject&quot; (&quot;course_id&quot;, &quot;subject_id&quot;),
	PRIMARY KEY(&quot;course_id&quot;,&quot;subject_id&quot;,&quot;assignment_id&quot;)
);


CREATE TABLE IF NOT EXISTS &quot;AAAssignmentsFinished&quot; (
  &quot;course_id&quot; 		INT 		NOT NULL,
  &quot;subject_id&quot; 		VARCHAR(10) 	NOT NULL,
  &quot;assignment_id&quot; 	VARCHAR(10) 	NOT NULL,
  &quot;student_ar&quot; 		VARCHAR(20) 	NOT NULL,
  &quot;content&quot; 		LONGBLOB 	NOT NULL,
  PRIMARY KEY (&quot;course_id&quot;,&quot;subject_id&quot;,&quot;assignment_id&quot;,&quot;student_ar&quot;),
  FOREIGN KEY (&quot;assignment_id&quot;) REFERENCES &quot;AAAssignment&quot; (&quot;assignment_id&quot;),
  FOREIGN KEY (&quot;course_id&quot;, &quot;subject_id&quot;, &quot;student_ar&quot;) REFERENCES &quot;AAEnrolled&quot; (&quot;course_id&quot;, &quot;subject_id&quot;, &quot;student_ar&quot;)
);

CREATE TABLE IF NOT EXISTS &quot;AALogin&quot; (
  &quot;username&quot; varchar(50) NOT NULL,
  &quot;password&quot; varchar(50) NOT NULL,
  &quot;temppassword&quot; varchar(50) NOT NULL,
  PRIMARY KEY (&quot;username&quot;),
  FOREIGN KEY (&quot;username&quot;) REFERENCES &quot;AAStudents&quot; (&quot;email&quot;)
);

COMMIT;</sql><current_tab id="0"/></tab_sql></sqlb_project>
